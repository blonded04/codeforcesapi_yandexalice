# ─╔══╦══╦══╦╗─╔╗╔══╦══╦═══╗
# ─╚╗╔╣╔═╣╔╗║╚═╝║║╔═╣╔╗║╔═╗║
# ──║║║╚═╣║║║╔╗─║║╚═╣║║║╚═╝║
# ╔╗║║╚═╗║║║║║╚╗║║╔═╣║║║╔╗╔╝
# ║╚╝╚╦═╝║╚╝║║─║║║║─║╚╝║║║║
# ╚═══╩══╩══╩╝─╚╝╚╝─╚══╩╝╚╝
# ╔══╦╗─╔══╦══╦═══╗╔══╗╔╗╔╗
# ║╔╗║║─╚╗╔╣╔═╣╔══╝║╔╗║║║║║
# ║╚╝║║──║║║║─║╚══╗║╚╝╚╣╚╝║
# ║╔╗║║──║║║║─║╔══╝║╔═╗╠═╗║
# ║║║║╚═╦╝╚╣╚═╣╚══╗║╚═╝║╔╝║
# ╚╝╚╩══╩══╩══╩═══╝╚═══╝╚═╝
# ╔══╦══╦════╦╗─╔╦═══╦════╗
# ║╔═╣╔╗╠═╗╔═╣╚═╝║╔══╩═╗╔═╝
# ║╚═╣╚╝║─║║─║╔╗─║╚══╗─║║
# ║╔═╣╔╗║─║║─║║╚╗║╔══╝─║║
# ║║─║║║║─║║─║║─║║╚══╗─║║
# ╚╝─╚╝╚╝─╚╝─╚╝─╚╩═══╝─╚╝

from flask import Flask, \
    request  # Нужно для запуска сервера, чтобы отвечать на запросы
import logging  # Нужно для логирования
import json  # JSON используется для обработки JSON запросов
from config import KEY, \
    SECRET  # В файле config.py находятся KEY и SECRET от API codeforces
from codeforces import \
    CodeForcesAPI  # В файле codeforces.py находится класс CodeAPI с описанными
# методами

app = Flask(__name__)

# Устанавливаем уровень логирования
logging.basicConfig(level=logging.INFO, filename='app.log',
                    format='%(asctime)s %(levelname)s %(name)s %(message)s')


@app.route('/post', methods=['POST'])  # При попытке отправить метод POST по
# адресу /post будет вызваны следующие функции, генирирующие JSON файл
def main():
    logging.info('Request: %r', request.json)

    # Начинаем формировать ответ, согласно документации
    # мы собираем словарь, который потом при помощи библиотеки json
    # преобразуем в JSON и отдадим Алисе
    response = {
        'session': request.json['session'],
        'version': request.json['version'],
        'response': {
            'end_session': False
        }
    }

    # Отправляем request.json и response в функцию handle_dialog, которая
    # доделает JSON файл, добавляя в него варианты для диалога
    handle_dialog(request.json, response)

    logging.info('Response: %r', request.json)

    # Вовращаем JSON файл, нужный для Алисы
    return json.dumps(response)


def handle_dialog(req, res):
    user_id = req['session']['user_id']

    if req['session']['new']:
        # Если пользователь новый, Алиса его поприветствует

        res['response']['text'] = '''
        Привет! Я умею работать с codeforces api!
        Вот что я могу:
        1) Получать содержимое блога по id блога.
        Комманда: Расскажи про запись [blog_id]
        2) Получать комментарии с записи блога по id блога.
        Комманда: Расскажи про комментарии записи [blog_id]
        3) Получать содержимое блога по id блога.
        Комманда: Расскажи про запись [blog_id]
        4) Получать информацию о предстоящих соревнованиях
        Комманда: Расскажи про ближайшие соревнования
        5) Получать информацию об изменении рейтинга на конкретном соревновании 
        по id пользователя и id соревнования.
        Комманда: Расскажи про изменение рейтинга [user_id] на соревновании [
        contest_id]
        6) Получать список тем задачи по имени задачи.
        Комманда: Расскажи про темы задачи [problem_name]
        7) Получать список имен длины, которая вам нужна, задач по теме, 
        к которой эти задачи принадлежат.
        Комманда: Расскажи про [amount] задач по теме [tag_name]
        8) Получать список заголвков записей в блоге пользователя по id 
        пользователя.
        Комманда: Расскажи про записи пользователя [user_id]
        9) Получать рейтинг пользователя по id пользователя.
        Комманда: Расскажи о пользователе [user_id]
        10) Получать историю изменения рейтинга пользователя по id пользователя.
        Комманда: Расскажи об изменении рейтинга пользователя [user_id]
        '''
        return

    # Сюда дойдем только, если пользователь не новый,
    # и разговор с Алисой уже был начат
    # Обрабатываем ответ пользователя.
    # В req['request']['original_utterance'] лежит весь текст,
    # что нам прислал пользователь
    # Если он написал 'ладно', 'куплю', 'покупаю', 'хорошо',
    # то мы считаем, что пользователь согласился.
    # Подумайте, всё ли в этом фрагменте написано "красиво"?
    if req['request']['original_utterance'].lower() in [
        'ладно',
        'куплю',
        'покупаю',
        'хорошо'
    ]:
        # Пользователь согласился, прощаемся.
        res['response']['text'] = 'Слона можно найти на Яндекс.Маркете!'
        res['response']['end_session'] = True
        return

    # Если нет, то убеждаем его купить слона!
    res['response']['text'] = 'Все говорят "%s", а ты купи слона!' % (
        req['request']['original_utterance']
    )


if __name__ == '__main__':
    app.run()
